
```dot
digraph vec_mpy1 {
    rankdir=TB;
    node [shape=circle];
    
    1 [label="Entrada da função"];
    2 [label="Verificação do loop (i < N)", shape=diamond];
    3 [label="Carregar a[i]", xlabel="C-Use: a, i"];
    4 [label="Carregar b[i]", xlabel="C-Use: b, i"];
    5 [label="Multiplicação de vetores (a[i] * b[i])", xlabel="Def: resultado"];
    6 [label="Multiplicação por c", xlabel="C-Use: c, Def: resultado_final"];
    7 [label="Armazenar em output[i]", xlabel="Def: output, C-Use: i"];
    8 [label="Incrementar i", xlabel="Def: i"];
    9 [label="Saida do loop"];
    
    1 -> 2;
    2 -> 3 [label=" Verdadeiro (i < N)"];
    2 -> 9 [label=" Falso (i >= N)"];
    3 -> 4;
    4 -> 5;
    5 -> 6;
    6 -> 7;
    7 -> 8;
    8 -> 2;
}
```

<codigos - vec_mpy1>
Node 1:
void vec_mpy1(short *a, short *b, short c) {
---
Node 2:
for (int i = 0; i < N; i++) {
---
Node 3:
short ai = a[i];
---
Node 4:
short bi = b[i];
---
Node 5:
short temp = ai * bi;
---
Node 6:
short result = temp * c;
---
Node 7:
output[i] = result;
</codigos>