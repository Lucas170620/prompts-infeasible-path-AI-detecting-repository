
```dot
digraph num_to_lcd {
    rankdir=TB;
    
    1 [label="1", xlabel="C-Use: a\nDef: OUT"];
    2 [label="2", xlabel="Case 0x00"];
    3 [label="3", xlabel="Case 0x01"];
    4 [label="4", xlabel="Case 0x02"];
    5 [label="5", xlabel="Case 0x03"];
    6 [label="6", xlabel="Case 0x04"];
    7 [label="7", xlabel="Case 0x05"];
    8 [label="8", xlabel="Case 0x06"];
    9 [label="9", xlabel="Case 0x07"];
    10[label="10", xlabel="Case 0x08"];
    11[label="11", xlabel="Case 0x09"];
    12[label="12", xlabel="Case 0x0A"];
    13[label="13", xlabel="Case 0x0B"];
    14[label="14", xlabel="Case 0x0C"];
    15[label="15", xlabel="Case 0x0D"];
    16[label="16", xlabel="Case 0x0E"];
    17[label="17", xlabel="Case 0x0F"];
    18[label="18", shape=doublecircle];
    
    1 -> 2 [label="a == 0x00"];
    1 -> 3 [label="a == 0x01"];
    1 -> 4 [label="a == 0x02"];
    1 -> 5 [label="a == 0x03"];
    1 -> 6 [label="a == 0x04"];
    1 -> 7 [label="a == 0x05"];
    1 -> 8 [label="a == 0x06"];
    1 -> 9 [label="a == 0x07"];
    1 -> 10[label="a == 0x08"];
    1 -> 11[label="a == 0x09"];
    1 -> 12[label="a == 0x0A"];
    1 -> 13[label="a == 0x0B"];
    1 -> 14[label="a == 0x0C"];
    1 -> 15[label="a == 0x0D"];
    1 -> 16[label="a == 0x0E"];
    1 -> 17[label="a == 0x0F"];
    
    2 -> 18 [label="Return"];
    3 -> 18 [label="Return"];
    4 -> 18 [label="Return"];
    5 -> 18 [label="Return"];
    6 -> 18 [label="Return"];
    7 -> 18 [label="Return"];
    8 -> 18 [label="Return"];
    9 -> 18 [label="Return"];
    10-> 18 [label="Return"];
    11-> 18 [label="Return"];
    12-> 18 [label="Return"];
    13-> 18 [label="Return"];
    14-> 18 [label="Return"];
    15-> 18 [label="Return"];
    16-> 18 [label="Return"];
    17-> 18 [label="Return"];
}
```

<codigos - num_to_lcd>
Node 1:
unsigned char num_to_lcd(unsigned char a)
{
    /*   -0-            1            01
     *  1   2         2   4        02  04
     *   -3-    i.e.    8     i.e.   08
     *  4   5        16   32       10  20
     *   -6-           64            40
     *
     */
    switch(a)
      {
Node 2:
case 0x00: return 0;
Node 3:
case 0x01: return 0x24;
Node 4:
case 0x02: return 1+4+8+16+64;
Node 5:
case 0x03: return 1+4+8+32+64;
Node 6:
case 0x04: return 2+4+8+32;
Node 7:
case 0x05: return 1+4+8+16+64;
Node 8:
case 0x06: return 1+2+8+16+32+64;
Node 9:
case 0x07: return 1+4+32;
Node 10:
case 0x08: return 0x7F;     /* light all */
Node 11:
case 0x09: return 0x0F + 32 + 64;
Node 12:
case 0x0A: return 0x0F + 16 + 32;
Node 13:
case 0x0B: return 2+8+16+32+64;
Node 14:
case 0x0C: return 1+2+16+64;
Node 15:
case 0x0D: return 4+8+16+32+64;
Node 16:
case 0x0E: return 1+2+8+16+64;
Node 17:
case 0x0F: return 1+2+8+16;
}
Node 18:
return 0;
</codigos>