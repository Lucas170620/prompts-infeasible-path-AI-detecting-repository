```dot
digraph my_sin {
    rankdir=TB;
    node [shape=box, fontname=Arial];
    edge [fontname=Arial];

    start [label="Start", shape=ellipse];
    end [label="End", shape=ellipse];
    
    // Normal nodes
    node1 [label="diff = rad"];
    node2 [label="app = diff"];
    node3 [label="inc = 1"];
    node4 [label="while (rad > 2*PI)"];
    node5 [label="rad -= 2*PI"];
    node6 [label="while (rad < -2*PI)"];
    node7 [label="rad += 2*PI"];
    node8 [label="diff = (diff * (-(rad*rad))) / ((2 * inc) * (2 * inc + 1))"];
    node9 [label="app = app + diff"];
    node10 [label="inc++"];
    node11 [label="while (my_fabs(diff) >= 1)"];
    node12 [label="return app"];
    
    // Infeasible paths nodes (color=red)
    node4_infeasible [label="while (rad > 2*PI)", shape=diamond, color=red, fontcolor=red];
    node6_infeasible [label="while (rad < -2*PI)", shape=diamond, color=red, fontcolor=red];
    
    // Normal edges
    start -> node4;
    node4 -> node5 [label="True"];
    node5 -> node4;
    node4 -> node6 [label="False"];
    node6 -> node7 [label="True"];
    node7 -> node6;
    node6 -> node1 [label="False"];
    node1 -> node2;
    node2 -> node3;
    node3 -> node8;
    node8 -> node9;
    node9 -> node10;
    node10 -> node11;
    node11 -> node8 [label="True"];
    node11 -> node12 [label="False"];
    node12 -> end;
    
    // Infeasible paths edges (color=red)
    node4 -> node6_infeasible [label="True && False", color=red, fontcolor=red];
    node6 -> node4_infeasible [label="True && False", color=red, fontcolor=red];
    node4_infeasible -> node6_infeasible [color=red];
    node6_infeasible -> node4_infeasible [color=red];
}
```