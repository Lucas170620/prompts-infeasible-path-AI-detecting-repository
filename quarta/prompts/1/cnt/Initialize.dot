digraph Initialize {
      node [shape=box];
      start [label="Start", shape=ellipse];
      end [label="End", shape=ellipse];
      outer_loop [label="OuterIndex = 0", shape=diamond];
      outer_cond [label="OuterIndex < MAXSIZE"];
      inner_loop [label="InnerIndex = 0", shape=diamond];
      inner_cond [label="InnerIndex < MAXSIZE"];
      assign [label="Array[OuterIndex][InnerIndex] = RandomInteger()"];
      inc_inner [label="InnerIndex++"];
      inc_outer [label="OuterIndex++"];
      return [label="return 0"];

      start -> outer_loop;
      outer_loop -> outer_cond;
      outer_cond -> inner_loop [label="True"];
      outer_cond -> return [label="False"];
      inner_loop -> inner_cond;
      inner_cond -> assign [label="True"];
      inner_cond -> inc_outer [label="False"];
      assign -> inc_inner -> inner_cond;
      inc_outer -> outer_cond;
      return -> end;
  }