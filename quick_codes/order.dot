digraph order {
    node [shape=box];
    edge [color=black];
    start [label="Start", shape=ellipse];
    end [label="End", shape=ellipse];
    
    // Nodes for initial assignments
    assign1 [label="isPremium = customer.isPremiumMember()"];
    assign2 [label="isEligibleForDiscount = product.getPrice() > 100.00"];
    assign3 [label="isOnClearance = product.isOnClearance()"];
    
    // Decision nodes
    cond1 [label="if (isPremium && isEligibleForDiscount)", shape=diamond];
    cond2 [label="if (isOnClearance)", shape=diamond];
    cond3 [label="if (isPremium && isEligibleForDiscount)", shape=diamond];
    
    // Action nodes
    action1 [label="System.out.println(\"Desconto Premium aplicado.\")"];
    action2 [label="System.out.println(\"Item em liquidacao.\")"];
    action3 [label="System.out.println(\"Super Desconto para Premium em Liquidacao!\")"];
    
    // Infeasible path nodes (red)
    action3 [fontcolor=red, color=red];
    cond3 [fontcolor=red, color=red];
    
    // Edges
    start -> assign1;
    assign1 -> assign2;
    assign2 -> assign3;
    assign3 -> cond1;
    
    cond1 -> action1 [label="True"];
    cond1 -> cond2 [label="False"];
    action1 -> cond2;
    
    cond2 -> action2 [label="True"];
    cond2 -> end [label="False"];
    action2 -> cond3;
    
    // Infeasible edges (red)
    cond3 -> action3 [label="True (Infeasible)", fontcolor=red, color=red];
    cond3 -> end [label="False"];
    action3 -> end [fontcolor=red, color=red];
}