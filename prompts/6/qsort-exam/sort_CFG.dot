digraph sort_CFG {
    node [shape=box, style=rounded, fontname="Helvetica"];
    N1 [label="1: Initialization\nunsigned long i, ir = n, j, k, l = 1;\nint jstack = 0;\nint flag;\nfloat a, temp;\nflag = 0;"];
    N2 [label="2: for (;;)\nif (ir - l < M)"];
    N3 [label="3: Insertion sort block\nfor (j = l + 1; j <= ir; j++) {\n a = arr[j];\n for (i = j - 1; i >= l; i--) {\n  if (arr[i] <= a) break;\n  arr[i+1] = arr[i];\n }\n arr[i+1] = a;\n}\nif (jstack == 0) break;\nir = istack[jstack--];\nl = istack[jstack--];"];
    N4 [label="4: Partitioning block\nk = (l + ir) >> 1;\nSWAP(arr[k], arr[l+1])\nif (arr[l] > arr[ir]) SWAP(arr[l], arr[ir])\nif (arr[l+1] > arr[ir]) SWAP(arr[l+1], arr[ir])\nif (arr[l] > arr[l+1]) SWAP(arr[l], arr[l+1])\ni = l + 1;\nj = ir;\na = arr[l+1];\nfor (;;) {\n i++; while (arr[i] < a) i++;\n j--; while (arr[j] > a) j--;\n if (j < i) break;\n SWAP(arr[i], arr[j]);\n}\narr[l+1] = arr[j];\narr[j] = a;\njstack += 2;\nif (ir - i + 1 >= j - l) {\n istack[jstack] = ir;\n istack[jstack-1] = i;\n ir = j - 1;\n} else {\n istack[jstack] = j - 1;\n istack[jstack-1] = l;\n l = i;\n}"];
    N5 [label="5: Exit"];

    N1 -> N2;
    N2 -> N3 [label="true"];
    N2 -> N4 [label="false"];
    N3 -> N2 [label="jstack != 0"];
    N3 -> N5 [label="jstack == 0"];
    N4 -> N2;
}