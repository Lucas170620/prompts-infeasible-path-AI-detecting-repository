digraph sort_CFG {
    node [shape=box, style=rounded, fontname="Helvetica"];
    N1 [label="1: Declaracoes e inicializacoes\nunsigned long i, ir = n, j, k, l = 1;\nint jstack = 0;\nint flag;\nfloat a, temp;\nflag = 0;"];
    N2 [label="2: for (;;)"];
    N3 [label="3: if (ir - l < M)"];
    N4 [label="4: Insertion Sort\nj = l + 1"];
    N5 [label="5: Loop: j <= ir"];
    N6 [label="6: a = arr[j];\ni = j - 1"];
    N7 [label="7: Loop: i >= l"];
    N8 [label="8: if (arr[i] <= a)\nbreak;"];
    N9 [label="9: arr[i+1] = arr[i];\ni--"];
    N10 [label="10: arr[i+1] = a;\nj++"];
    N11 [label="11: if (jstack == 0)"];
    N12 [label="12: break;"];
    N13 [label="13: ir = istack[jstack--];\nl = istack[jstack--];"];
    N14 [label="14: Particao\nk = (l + ir) >> 1;\nSWAP(arr[k], arr[l+1]);"];
    N15 [label="15: if (arr[l] > arr[ir])\nSWAP(arr[l], arr[ir]);"];
    N16 [label="16: if (arr[l+1] > arr[ir])\nSWAP(arr[l+1], arr[ir]);"];
    N17 [label="17: if (arr[l] > arr[l+1])\nSWAP(arr[l], arr[l+1]);"];
    N18 [label="18: i = l + 1;\nj = ir;\na = arr[l+1];"];
    N19 [label="19: for (;;)"];
    N20 [label="20: i++;\nwhile (arr[i] < a) i++;"];
    N21 [label="21: j--;\nwhile (arr[j] > a) j--;"];
    N22 [label="22: if (j < i)\nbreak;"];
    N23 [label="23: SWAP(arr[i], arr[j]);"];
    N24 [label="24: arr[l+1] = arr[j];\narr[j] = a;"];
    N25 [label="25: jstack += 2;"];
    N26 [label="26: if (ir - i + 1 >= j - l)"];
    N27 [label="27: istack[jstack] = ir;\nistack[jstack-1] = i;\nir = j - 1;"];
    N28 [label="28: istack[jstack] = j - 1;\nistack[jstack-1] = l;\nl = i;"];
    N29 [label="29: Fim", shape=doublecircle];

    N1 -> N2;
    N2 -> N3;
    N3 -> N4 [label="true"];
    N3 -> N14 [label="false"];
    N4 -> N5;
    N5 -> N6 [label="true"];
    N5 -> N11 [label="false"];
    N6 -> N7;
    N7 -> N8 [label="true"];
    N7 -> N10 [label="false"];
    N8 -> N10 [label="break"];
    N8 -> N9 [label="else"];
    N9 -> N7;
    N10 -> N5;
    N11 -> N12 [label="true"];
    N11 -> N13 [label="false"];
    N12 -> N29;
    N13 -> N2;
    N14 -> N15;
    N15 -> N16;
    N16 -> N17;
    N17 -> N18;
    N18 -> N19;
    N19 -> N20;
    N20 -> N21;
    N21 -> N22;
    N22 -> N24 [label="true"];
    N22 -> N23 [label="false"];
    N23 -> N19;
    N24 -> N25;
    N25 -> N26;
    N26 -> N27 [label="true"];
    N26 -> N28 [label="false"];
    N27 -> N2;
    N28 -> N2;
}