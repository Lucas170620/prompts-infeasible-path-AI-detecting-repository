digraph foo_DFG {
    node [shape=ellipse, style=filled, fillcolor=lightblue];
    x_in [label="x"];
    keys_in [label="keys"];
    answer_in [label="answer"];

    node [shape=box, style=""];
    assign_i [label="i=0"];
    assign_j [label="j=0"];
    assign_k [label="k=0"];
    assign_l [label="l=0"];
    inc_i [label="i++"];
    inc_j [label="j++"];
    inc_k [label="k++"];
    inc_l [label="l++"];
    cmp_i [label="i<5"];
    cmp_j [label="j<5"];
    cmp_k [label="k<5"];
    cmp_l [label="l<5"];
    cmp_key [label="keys[i][j][k][l] == x"];
    add [label="answer[i][j][k][l] + keys[i][j][k][l]"];

    node [shape=ellipse, style=filled, fillcolor=lightgreen];
    return_val [label="return"];

    x_in -> cmp_key;
    keys_in -> cmp_key;
    keys_in -> add;
    answer_in -> add;

    assign_i -> cmp_i;
    assign_i -> inc_i;
    inc_i -> cmp_i;
    cmp_i -> assign_j [label="true"];

    assign_j -> cmp_j;
    assign_j -> inc_j;
    inc_j -> cmp_j;
    cmp_j -> assign_k [label="true"];

    assign_k -> cmp_k;
    assign_k -> inc_k;
    inc_k -> cmp_k;
    cmp_k -> assign_l [label="true"];

    assign_l -> cmp_l;
    assign_l -> inc_l;
    inc_l -> cmp_l;
    cmp_l -> cmp_key [label="true"];

    cmp_key -> add [label="true"];
    add -> return_val;
}