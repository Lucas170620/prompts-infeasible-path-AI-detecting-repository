```dot
digraph upzero {
    rankdir=TB;
    node [shape=box, fontname=Arial];
    edge [fontname=Arial];

    // Nós principais
    start [label="Start", shape=ellipse];
    end [label="End", shape=ellipse];
    cond_dlt_eq_0 [label="if (dlt == 0)", shape=diamond];
    for_loop_if [label="for i=0 to 5\nbli[i] = (255L * bli[i]) >> 8L", shape=box];
    for_loop_else [label="for i=0 to 5\nif (dlt*dlti[i] >= 0) wd2=128 else wd2=-128\nwd3 = (255L * bli[i]) >> 8L\nbli[i] = wd2 + wd3", shape=box];
    update_dlti [label="dlti[5] = dlti[4]\ndlti[4] = dlti[3]\ndlti[3] = dlti[2]\ndlti[1] = dlti[0]\ndlti[0] = dlt", shape=box];
    return [label="return", shape=box];

    // Arestas normais
    start -> cond_dlt_eq_0;
    cond_dlt_eq_0 -> for_loop_if [label="True"];
    cond_dlt_eq_0 -> for_loop_else [label="False"];
    for_loop_if -> update_dlti;
    for_loop_else -> update_dlti;
    update_dlti -> return;
    return -> end;

    // Caminhos inviáveis identificados
    // Não há caminhos inviáveis óbvios nesta função
    // pois todas as condições dependem de valores de entrada
    // que podem variar dinamicamente
}
```