digraph decode {
    rankdir=TB;
    node [shape=box, fontname=Arial];
    edge [fontname=Arial];

    start [label="Start", shape=ellipse];
    end [label="End", shape=ellipse];
    node1 [label="ilr = input & 0x3f"];
    node2 [label="ih = input >> 6"];
    node3 [label="dec_szl = filtez(dec_del_bpl,dec_del_dltx)"];
    node4 [label="dec_spl = filtep(dec_rlt1,dec_al1,dec_rlt2,dec_al2)"];
    node5 [label="dec_sl = dec_spl + dec_szl"];
    node6 [label="dec_dlt = ((long)dec_detl*qq4_code4_table[ilr >> 2]) >> 15"];
    node7 [label="dl = ((long)dec_detl*qq6_code6_table[il]) >> 15"];
    node8 [label="rl = dl + dec_sl"];
    node9 [label="dec_nbl = logscl(ilr,dec_nbl)"];
    node10 [label="dec_detl = scalel(dec_nbl,8)"];
    node11 [label="dec_plt = dec_dlt + dec_szl"];
    node12 [label="upzero(dec_dlt,dec_del_dltx,dec_del_bpl)"];
    node13 [label="dec_al2 = uppol2(dec_al1,dec_al2,dec_plt,dec_plt1,dec_plt2)"];
    node14 [label="dec_al1 = uppol1(dec_al1,dec_al2,dec_plt,dec_plt1)"];
    node15 [label="dec_rlt = dec_sl + dec_dlt"];
    node16 [label="dec_rlt2 = dec_rlt1"];
    node17 [label="dec_rlt1 = dec_rlt"];
    node18 [label="dec_plt2 = dec_plt1"];
    node19 [label="dec_plt1 = dec_plt"];
    node20 [label="dec_szh = filtez(dec_del_bph,dec_del_dhx)"];
    node21 [label="dec_sph = filtep(dec_rh1,dec_ah1,dec_rh2,dec_ah2)"];
    node22 [label="dec_sh = dec_sph + dec_szh"];
    node23 [label="dec_dh = ((long)dec_deth*qq2_code2_table[ih]) >> 15L"];
    node24 [label="dec_nbh = logsch(ih,dec_nbh)"];
    node25 [label="dec_deth = scalel(dec_nbh,10)"];
    node26 [label="dec_ph = dec_dh + dec_szh"];
    node27 [label="upzero(dec_dh,dec_del_dhx,dec_del_bph)"];
    node28 [label="dec_ah2 = uppol2(dec_ah1,dec_ah2,dec_ph,dec_ph1,dec_ph2)"];
    node29 [label="dec_ah1 = uppol1(dec_ah1,dec_ah2,dec_ph,dec_ph1)"];
    node30 [label="rh = dec_sh + dec_dh"];
    node31 [label="dec_rh2 = dec_rh1"];
    node32 [label="dec_rh1 = rh"];
    node33 [label="dec_ph2 = dec_ph1"];
    node34 [label="dec_ph1 = dec_ph"];
    node35 [label="xd = rl - rh"];
    node36 [label="xs = rl + rh"];
    node37 [label="h_ptr = h"];
    node38 [label="ac_ptr = accumc"];
    node39 [label="ad_ptr = accumd"];
    node40 [label="xa1 = (long)xd * (*h_ptr++)"];
    node41 [label="xa2 = (long)xs * (*h_ptr++)"];
    node42 [label="i = 0"];
    node43 [label="i < 10"];
    node44 [label="xa1 += (long)(*ac_ptr++) * (*h_ptr++)"];
    node45 [label="xa2 += (long)(*ad_ptr++) * (*h_ptr++)"];
    node46 [label="i++"];
    node47 [label="xa1 += (long)(*ac_ptr) * (*h_ptr++)"];
    node48 [label="xa2 += (long)(*ad_ptr) * (*h_ptr++)"];
    node49 [label="xout1 = xa1 >> 14"];
    node50 [label="xout2 = xa2 >> 14"];
    node51 [label="ac_ptr1 = ac_ptr - 1"];
    node52 [label="ad_ptr1 = ad_ptr - 1"];
    node53 [label="i = 0"];
    node54 [label="i < 10"];
    node55 [label="*ac_ptr-- = *ac_ptr1--"];
    node56 [label="*ad_ptr-- = *ad_ptr1--"];
    node57 [label="i++"];
    node58 [label="*ac_ptr = xd"];
    node59 [label="*ad_ptr = xs"];
    node60 [label="return"];

    start -> node1;
    node1 -> node2;
    node2 -> node3;
    node3 -> node4;
    node4 -> node5;
    node5 -> node6;
    node6 -> node7;
    node7 -> node8;
    node8 -> node9;
    node9 -> node10;
    node10 -> node11;
    node11 -> node12;
    node12 -> node13;
    node13 -> node14;
    node14 -> node15;
    node15 -> node16;
    node16 -> node17;
    node17 -> node18;
    node18 -> node19;
    node19 -> node20;
    node20 -> node21;
    node21 -> node22;
    node22 -> node23;
    node23 -> node24;
    node24 -> node25;
    node25 -> node26;
    node26 -> node27;
    node27 -> node28;
    node28 -> node29;
    node29 -> node30;
    node30 -> node31;
    node31 -> node32;
    node32 -> node33;
    node33 -> node34;
    node34 -> node35;
    node35 -> node36;
    node36 -> node37;
    node37 -> node38;
    node38 -> node39;
    node39 -> node40;
    node40 -> node41;
    node41 -> node42;
    node42 -> node43;
    node43 -> node44 [label="True"];
    node44 -> node45;
    node45 -> node46;
    node46 -> node43;
    node43 -> node47 [label="False"];
    node47 -> node48;
    node48 -> node49;
    node49 -> node50;
    node50 -> node51;
    node51 -> node52;
    node52 -> node53;
    node53 -> node54;
    node54 -> node55 [label="True"];
    node55 -> node56;
    node56 -> node57;
    node57 -> node54;
    node54 -> node58 [label="False"];
    node58 -> node59;
    node59 -> node60;
    node60 -> end;

    node7 [color=red, fontcolor=red];
    node7 -> node8 [color=red, fontcolor=red];
}