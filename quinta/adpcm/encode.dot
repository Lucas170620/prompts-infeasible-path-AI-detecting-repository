digraph encode {
    rankdir=TB;
    node [shape=box, fontname=Arial];
    edge [fontname=Arial];

    start [label="encode start", shape=ellipse];
    end [label="encode end", shape=ellipse];
    
    node1 [label="i = 0"];
    node2 [label="h_ptr = h"];
    node3 [label="tqmf_ptr = tqmf"];
    node4 [label="xa = (long)(*tqmf_ptr++) * (*h_ptr++)"];
    node5 [label="xb = (long)(*tqmf_ptr++) * (*h_ptr++)"];
    node6 [label="i = 0"];
    node7 [label="i < 10"];
    node8 [label="xa += (long)(*tqmf_ptr++) * (*h_ptr++)"];
    node9 [label="xb += (long)(*tqmf_ptr++) * (*h_ptr++)"];
    node10 [label="i++"];
    node11 [label="xa += (long)(*tqmf_ptr++) * (*h_ptr++)"];
    node12 [label="xb += (long)(*tqmf_ptr) * (*h_ptr++)"];
    node13 [label="tqmf_ptr1 = tqmf_ptr - 2"];
    node14 [label="i = 0"];
    node15 [label="i < 22"];
    node16 [label="*tqmf_ptr-- = *tqmf_ptr1--"];
    node17 [label="i++"];
    node18 [label="*tqmf_ptr-- = xin1"];
    node19 [label="*tqmf_ptr = xin2"];
    node20 [label="xl = (xa + xb) >> 15"];
    node21 [label="xh = (xa - xb) >> 15"];
    node22 [label="szl = filtez(delay_bpl, delay_dltx)"];
    node23 [label="spl = filtep(rlt1, al1, rlt2, al2)"];
    node24 [label="sl = szl + spl"];
    node25 [label="el = xl - sl"];
    node26 [label="il = quantl(el, detl)"];
    node27 [label="dlt = ((long)detl*qq4_code4_table[il >> 2]) >> 15"];
    node28 [label="nbl = logscl(il, nbl)"];
    node29 [label="detl = scalel(nbl, 8)"];
    node30 [label="plt = dlt + szl"];
    node31 [label="upzero(dlt, delay_dltx, delay_bpl)"];
    node32 [label="al2 = uppol2(al1, al2, plt, plt1, plt2)"];
    node33 [label="al1 = uppol1(al1, al2, plt, plt1)"];
    node34 [label="rlt = sl + dlt"];
    node35 [label="rlt2 = rlt1"];
    node36 [label="rlt1 = rlt"];
    node37 [label="plt2 = plt1"];
    node38 [label="plt1 = plt"];
    node39 [label="szh = filtez(delay_bph, delay_dhx)"];
    node40 [label="sph = filtep(rh1, ah1, rh2, ah2)"];
    node41 [label="sh = sph + szh"];
    node42 [label="eh = xh - sh"];
    node43 [label="eh >= 0", shape=diamond];
    node44 [label="ih = 3"];
    node45 [label="ih = 1"];
    node46 [label="decis = (564L*(long)deth) >> 12L"];
    node47 [label="my_abs(eh) > decis", shape=diamond];
    node48 [label="ih--"];
    node49 [label="dh = ((long)deth*qq2_code2_table[ih]) >> 15L"];
    node50 [label="nbh = logsch(ih, nbh)"];
    node51 [label="deth = scalel(nbh, 10)"];
    node52 [label="ph = dh + szh"];
    node53 [label="upzero(dh, delay_dhx, delay_bph)"];
    node54 [label="ah2 = uppol2(ah1, ah2, ph, ph1, ph2)"];
    node55 [label="ah1 = uppol1(ah1, ah2, ph, ph1)"];
    node56 [label="yh = sh + dh"];
    node57 [label="rh2 = rh1"];
    node58 [label="rh1 = yh"];
    node59 [label="ph2 = ph1"];
    node60 [label="ph1 = ph"];
    node61 [label="return(il | (ih << 6))"];

    start -> node1;
    node1 -> node2;
    node2 -> node3;
    node3 -> node4;
    node4 -> node5;
    node5 -> node6;
    node6 -> node7;
    node7 -> node8 [label="True"];
    node8 -> node9;
    node9 -> node10;
    node10 -> node7;
    node7 -> node11 [label="False"];
    node11 -> node12;
    node12 -> node13;
    node13 -> node14;
    node14 -> node15;
    node15 -> node16 [label="True"];
    node16 -> node17;
    node17 -> node15;
    node15 -> node18 [label="False"];
    node18 -> node19;
    node19 -> node20;
    node20 -> node21;
    node21 -> node22;
    node22 -> node23;
    node23 -> node24;
    node24 -> node25;
    node25 -> node26;
    node26 -> node27;
    node27 -> node28;
    node28 -> node29;
    node29 -> node30;
    node30 -> node31;
    node31 -> node32;
    node32 -> node33;
    node33 -> node34;
    node34 -> node35;
    node35 -> node36;
    node36 -> node37;
    node37 -> node38;
    node38 -> node39;
    node39 -> node40;
    node40 -> node41;
    node41 -> node42;
    node42 -> node43;
    node43 -> node44 [label="True"];
    node43 -> node45 [label="False"];
    node44 -> node46;
    node45 -> node46;
    node46 -> node47;
    node47 -> node48 [label="True"];
    node48 -> node49;
    node47 -> node49 [label="False"];
    node49 -> node50;
    node50 -> node51;
    node51 -> node52;
    node52 -> node53;
    node53 -> node54;
    node54 -> node55;
    node55 -> node56;
    node56 -> node57;
    node57 -> node58;
    node58 -> node59;
    node59 -> node60;
    node60 -> node61;
    node61 -> end;
}