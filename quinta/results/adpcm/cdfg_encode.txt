```dot
digraph encode {
    rankdir=TB;
    node [shape=box, fontname=Arial];
    edge [fontname=Arial];

    start [label="Start", shape=ellipse];
    end [label="End", shape=ellipse];
    init_vars [label="int i;\nint *h_ptr,*tqmf_ptr,*tqmf_ptr1;\nlong int xa,xb;\nint decis;"];
    init_ptrs [label="h_ptr = h;\ntqmf_ptr = tqmf;"];
    init_xa_xb [label="xa = (long)(*tqmf_ptr++) * (*h_ptr++);\nxb = (long)(*tqmf_ptr++) * (*h_ptr++);"];
    loop_init [label="i = 0", shape=diamond];
    loop_cond [label="i < 10", shape=diamond];
    loop_body [label="xa += (long)(*tqmf_ptr++) * (*h_ptr++);\nxb += (long)(*tqmf_ptr++) * (*h_ptr++);\ni++"];
    final_add [label="xa += (long)(*tqmf_ptr++) * (*h_ptr++);\nxb += (long)(*tqmf_ptr) * (*h_ptr++);"];
    shift_tqmf [label="tqmf_ptr1 = tqmf_ptr - 2;\nfor(i = 0 ; i < 22 ; i++) *tqmf_ptr-- = *tqmf_ptr1--;\n*tqmf_ptr-- = xin1;\n*tqmf_ptr = xin2;"];
    calc_xl_xh [label="xl = (xa + xb) >> 15;\nxh = (xa - xb) >> 15;"];
    szl_calc [label="szl = filtez(delay_bpl,delay_dltx);"];
    spl_calc [label="spl = filtep(rlt1,al1,rlt2,al2);"];
    sl_calc [label="sl = szl + spl;"];
    el_calc [label="el = xl - sl;"];
    il_calc [label="il = quantl(el,detl);"];
    dlt_calc [label="dlt = ((long)detl*qq4_code4_table[il >> 2]) >> 15;"];
    nbl_calc [label="nbl = logscl(il,nbl);"];
    detl_calc [label="detl = scalel(nbl,8);"];
    plt_calc [label="plt = dlt + szl;"];
    upzero_call [label="upzero(dlt,delay_dltx,delay_bpl);"];
    al2_calc [label="al2 = uppol2(al1,al2,plt,plt1,plt2);"];
    al1_calc [label="al1 = uppol1(al1,al2,plt,plt1);"];
    rlt_calc [label="rlt = sl + dlt;"];
    shift_rlt [label="rlt2 = rlt1;\nrlt1 = rlt;"];
    shift_plt [label="plt2 = plt1;\nplt1 = plt;"];
    szh_calc [label="szh = filtez(delay_bph,delay_dhx);"];
    sph_calc [label="sph = filtep(rh1,ah1,rh2,ah2);"];
    sh_calc [label="sh = sph + szh;"];
    eh_calc [label="eh = xh - sh;"];
    eh_cond [label="if(eh >= 0)", shape=diamond];
    ih_true [label="ih = 3;"];
    ih_false [label="ih = 1;"];
    decis_calc [label="decis = (564L*(long)deth) >> 12L;"];
    abs_eh_calc [label="my_abs(eh)"];
    decis_cond [label="if(my_abs(eh) > decis)", shape=diamond];
    ih_dec [label="ih--;"];
    dh_calc [label="dh = ((long)deth*qq2_code2_table[ih]) >> 15L;"];
    nbh_calc [label="nbh = logsch(ih,nbh);"];
    deth_calc [label="deth = scalel(nbh,10);"];
    ph_calc [label="ph = dh + szh;"];
    upzero_call2 [label="upzero(dh,delay_dhx,delay_bph);"];
    ah2_calc [label="ah2 = uppol2(ah1,ah2,ph,ph1,ph2);"];
    ah1_calc [label="ah1 = uppol1(ah1,ah2,ph,ph1);"];
    yh_calc [label="yh = sh + dh;"];
    shift_rh [label="rh2 = rh1;\nrh1 = yh;"];
    shift_ph [label="ph2 = ph1;\nph1 = ph;"];
    return_stmt [label="return(il | (ih << 6));"];

    start -> init_vars;
    init_vars -> init_ptrs;
    init_ptrs -> init_xa_xb;
    init_xa_xb -> loop_init;
    loop_init -> loop_cond;
    loop_cond -> loop_body [label="True"];
    loop_body -> loop_cond;
    loop_cond -> final_add [label="False"];
    final_add -> shift_tqmf;
    shift_tqmf -> calc_xl_xh;
    calc_xl_xh -> szl_calc;
    szl_calc -> spl_calc;
    spl_calc -> sl_calc;
    sl_calc -> el_calc;
    el_calc -> il_calc;
    il_calc -> dlt_calc;
    dlt_calc -> nbl_calc;
    nbl_calc -> detl_calc;
    detl_calc -> plt_calc;
    plt_calc -> upzero_call;
    upzero_call -> al2_calc;
    al2_calc -> al1_calc;
    al1_calc -> rlt_calc;
    rlt_calc -> shift_rlt;
    shift_rlt -> shift_plt;
    shift_plt -> szh_calc;
    szh_calc -> sph_calc;
    sph_calc -> sh_calc;
    sh_calc -> eh_calc;
    eh_calc -> eh_cond;
    eh_cond -> ih_true [label="True"];
    eh_cond -> ih_false [label="False"];
    ih_true -> decis_calc;
    ih_false -> decis_calc;
    decis_calc -> abs_eh_calc;
    abs_eh_calc -> decis_cond;
    decis_cond -> ih_dec [label="True"];
    decis_cond -> dh_calc [label="False"];
    ih_dec -> dh_calc;
    dh_calc -> nbh_calc;
    nbh_calc -> deth_calc;
    deth_calc -> ph_calc;
    ph_calc -> upzero_call2;
    upzero_call2 -> ah2_calc;
    ah2_calc -> ah1_calc;
    ah1_calc -> yh_calc;
    yh_calc -> shift_rh;
    shift_rh -> shift_ph;
    shift_ph -> return_stmt;
    return_stmt -> end;
}
```