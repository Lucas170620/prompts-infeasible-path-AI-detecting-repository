```dot
digraph num_to_lcd {
    rankdir=TB;
    node [shape=box, fontname=Arial];
    edge [fontname=Arial];

    start [label="Start\nnum_to_lcd(unsigned char a)", shape=ellipse];
    end [label="End\nreturn 0", shape=ellipse];
    switch_node [label="switch(a)", shape=diamond];
    
    case_0 [label="case 0x00:\nreturn 0"];
    case_1 [label="case 0x01:\nreturn 0x24"];
    case_2 [label="case 0x02:\nreturn 1+4+8+16+64"];
    case_3 [label="case 0x03:\nreturn 1+4+8+32+64"];
    case_4 [label="case 0x04:\nreturn 2+4+8+32"];
    case_5 [label="case 0x05:\nreturn 1+4+8+16+64"];
    case_6 [label="case 0x06:\nreturn 1+2+8+16+32+64"];
    case_7 [label="case 0x07:\nreturn 1+4+32"];
    case_8 [label="case 0x08:\nreturn 0x7F"];
    case_9 [label="case 0x09:\nreturn 0x0F + 32 + 64"];
    case_A [label="case 0x0A:\nreturn 0x0F + 16 + 32"];
    case_B [label="case 0x0B:\nreturn 2+8+16+32+64"];
    case_C [label="case 0x0C:\nreturn 1+2+16+64"];
    case_D [label="case 0x0D:\nreturn 4+8+16+32+64"];
    case_E [label="case 0x0E:\nreturn 1+2+8+16+64"];
    case_F [label="case 0x0F:\nreturn 1+2+8+16"];
    
    start -> switch_node;
    switch_node -> case_0 [label="a == 0x00"];
    switch_node -> case_1 [label="a == 0x01"];
    switch_node -> case_2 [label="a == 0x02"];
    switch_node -> case_3 [label="a == 0x03"];
    switch_node -> case_4 [label="a == 0x04"];
    switch_node -> case_5 [label="a == 0x05"];
    switch_node -> case_6 [label="a == 0x06"];
    switch_node -> case_7 [label="a == 0x07"];
    switch_node -> case_8 [label="a == 0x08"];
    switch_node -> case_9 [label="a == 0x09"];
    switch_node -> case_A [label="a == 0x0A"];
    switch_node -> case_B [label="a == 0x0B"];
    switch_node -> case_C [label="a == 0x0C"];
    switch_node -> case_D [label="a == 0x0D"];
    switch_node -> case_E [label="a == 0x0E"];
    switch_node -> case_F [label="a == 0x0F"];
    switch_node -> end [label="default"];
    
    case_0 -> end;
    case_1 -> end;
    case_2 -> end;
    case_3 -> end;
    case_4 -> end;
    case_5 -> end;
    case_6 -> end;
    case_7 -> end;
    case_8 -> end;
    case_9 -> end;
    case_A -> end;
    case_B -> end;
    case_C -> end;
    case_D -> end;
    case_E -> end;
    case_F -> end;
}
```