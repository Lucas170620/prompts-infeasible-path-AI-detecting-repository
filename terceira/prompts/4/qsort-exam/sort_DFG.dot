digraph sort_DFG {
    node [shape=ellipse, style=filled, fillcolor=lightblue];
    arr_in [label="arr"];
    n_in [label="n"];
    M_in [label="M"];
    istack_in [label="istack"];

    node [shape=box, style="", fillcolor=""];
    op_init [label="Initialization"];
    op_cond [label="ir-l < M"];
    op_swap1 [label="SWAP(arr[k], arr[l+1])"];
    op_swap2 [label="SWAP(arr[l], arr[ir])"];
    op_swap3 [label="SWAP(arr[l+1], arr[ir])"];
    op_swap4 [label="SWAP(arr[l], arr[l+1])"];
    op_assign_a [label="a = arr[l+1]"];
    op_inc_i [label="i++"];
    op_dec_j [label="j--"];
    op_compare [label="arr[i] < a? arr[j] > a?"];
    op_swap5 [label="SWAP(arr[i], arr[j])"];
    op_assign_arr [label="arr[l+1]=arr[j]; arr[j]=a"];
    op_push [label="Push to istack"];

    node [shape=ellipse, style=filled, fillcolor=lightgreen];
    arr_out [label="arr"];
    istack_out [label="istack"];

    arr_in -> op_swap1;
    arr_in -> op_swap2;
    arr_in -> op_swap3;
    arr_in -> op_swap4;
    arr_in -> op_assign_a;
    arr_in -> op_compare;
    arr_in -> op_swap5;
    arr_in -> op_assign_arr;
    n_in -> op_init;
    M_in -> op_cond;
    istack_in -> op_push;

    op_swap1 -> arr_out;
    op_swap2 -> arr_out;
    op_swap3 -> arr_out;
    op_swap4 -> arr_out;
    op_assign_arr -> arr_out;
    op_push -> istack_out;
}