digraph sort_DFG {
    node [shape=ellipse, style=filled, fillcolor=lightblue];
    edge [fontname="Helvetica"];

    // Nos de entrada (variaveis e constantes)
    n [label="n"];
    M_val [label="M (7)"];
    arr_in [label="arr"];
    istack_in [label="istack"];

    // Nos de operacao
    node [shape=box, style="", fillcolor=""];
    op_init [label="Inicializacao\ni, ir=n, j, k, l=1, jstack=0, flag=0"];
    op_cond1 [label="Condicao: ir - l < M"];
    op_insortion [label="Insercao ordenada"];
    op_cond2 [label="Condicao: jstack == 0"];
    op_swap1 [label="SWAP (varios)"];
    op_partition [label="Particao: i, j, a"];
    op_cond3 [label="Condicao: j < i"];
    op_swap2 [label="SWAP(arr[i], arr[j])"];
    op_update [label="Atualizacao: arr, jstack"];
    op_cond4 [label="Condicao: ir - i + 1 >= j - l"];
    op_push1 [label="Push: ir, i"];
    op_push2 [label="Push: j-1, l"];

    // Nos de saida
    node [shape=ellipse, style=filled, fillcolor=lightgreen];
    arr_out [label="arr (ordenado)"];

    // Arestas de dependencia de dados
    n -> op_init;
    M_val -> op_cond1;
    arr_in -> op_init -> op_cond1;
    op_cond1 -> op_insortion [label="true"];
    op_cond1 -> op_swap1 [label="false"];
    op_insortion -> op_cond2;
    op_cond2 -> arr_out [label="true (break)"];
    op_cond2 -> op_init [label="false (pop)"];
    op_swap1 -> op_partition;
    op_partition -> op_cond3;
    op_cond3 -> op_swap2 [label="false"];
    op_cond3 -> op_update [label="true"];
    op_swap2 -> op_partition;
    op_update -> op_cond4;
    op_cond4 -> op_push1 [label="true"];
    op_cond4 -> op_push2 [label="false"];
    op_push1 -> op_init;
    op_push2 -> op_init;
}