digraph encode_DFG {
    node [shape=ellipse, style=filled, fillcolor=lightblue];
    xin1 [label="xin1"];
    xin2 [label="xin2"];
    h [label="h[]"];
    tqmf [label="tqmf[]"];
    node [shape=box, style="", fillcolor=""];
    mult_xa [label="* (para xa)"];
    mult_xb [label="* (para xb)"];
    sum_xa [label="+ (xa)"];
    sum_xb [label="+ (xb)"];
    shift_xl [label=">> 15 (xl)"];
    shift_xh [label=">> 15 (xh)"];
    filtez_szl [label="filtez"];
    filtep_spl [label="filtep"];
    add_sl [label="+ (sl)"];
    sub_el [label="- (el)"];
    quantl_il [label="quantl"];
    mult_dlt [label="* (dlt)"];
    logscl_nbl [label="logscl"];
    scalel_detl [label="scalel"];
    add_plt [label="+ (plt)"];
    upzero [label="upzero"];
    uppol2_al2 [label="uppol2"];
    uppol1_al1 [label="uppol1"];
    add_rlt [label="+ (rlt)"];
    filtez_szh [label="filtez"];
    filtep_sph [label="filtep"];
    add_sh [label="+ (sh)"];
    sub_eh [label="- (eh)"];
    cmp_eh [label=">= (eh)"];
    abs_eh [label="my_abs"];
    cmp_decis [label="> (decis)"];
    mult_dh [label="* (dh)"];
    logsch_nbh [label="logsch"];
    scalel_deth [label="scalel"];
    add_ph [label="+ (ph)"];
    upzero_h [label="upzero"];
    uppol2_ah2 [label="uppol2"];
    uppol1_ah1 [label="uppol1"];
    add_yh [label="+ (yh)"];
    node [shape=ellipse, style=filled, fillcolor=lightgreen];
    output [label="il | (ih << 6)"];

    xin1 -> mult_xa;
    xin2 -> mult_xb;
    h -> mult_xa;
    h -> mult_xb;
    tqmf -> mult_xa;
    tqmf -> mult_xb;
    mult_xa -> sum_xa;
    mult_xb -> sum_xb;
    sum_xa -> shift_xl;
    sum_xb -> shift_xh;
    shift_xl -> filtez_szl;
    shift_xh -> filtez_szh;
    filtez_szl -> add_sl;
    filtep_spl -> add_sl;
    add_sl -> sub_el;
    sub_el -> quantl_il;
    quantl_il -> mult_dlt;
    mult_dlt -> add_plt;
    add_plt -> upzero;
    upzero -> uppol2_al2;
    uppol2_al2 -> uppol1_al1;
    uppol1_al1 -> add_rlt;
    add_rlt -> output [style=dashed];
    filtez_szh -> add_sh;
    filtep_sph -> add_sh;
    add_sh -> sub_eh;
    sub_eh -> cmp_eh;
    sub_eh -> abs_eh;
    abs_eh -> cmp_decis;
    cmp_decis -> mult_dh;
    mult_dh -> add_ph;
    add_ph -> upzero_h;
    upzero_h -> uppol2_ah2;
    uppol2_ah2 -> uppol1_ah1;
    uppol1_ah1 -> add_yh;
    add_yh -> output;
}