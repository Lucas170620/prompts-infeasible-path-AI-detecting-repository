digraph compress_CFG {
    node [shape=box];
    N1 [label="1: offset = 0; bytes_out = 3; ..."];
    N2 [label="2: ent = getbyte();"];
    N3 [label="3: hshift = 0; for (fcode = ...);"];
    N4 [label="4: hshift = 8 - hshift;"];
    N5 [label="5: cl_hash(hsize_reg);"];
    N6 [label="6: while (InCnt > 0)"];
    N7 [label="7: c = getbyte(); in_count++;"];
    N8 [label="8: fcode = ...; i = ...;"];
    N9 [label="9: if (htabof(i) == fcode)"];
    N10 [label="10: ent = codetabof(i); continue;"];
    N11 [label="11: else if (htabof(i) < 0)"];
    N12 [label="12: goto nomatch;"];
    N13 [label="13: disp = hsize_reg - i;"];
    N14 [label="14: if (i == 0) disp = 1;"];
    N15 [label="15: probe: i -= disp;"];
    N16 [label="16: if (i < 0) i += hsize_reg;"];
    N17 [label="17: if (htabof(i) == fcode)"];
    N18 [label="18: ent = codetabof(i); continue;"];
    N19 [label="19: if (htabof(i) > 0 && bound++ < in_count)"];
    N20 [label="20: goto probe;"];
    N21 [label="21: nomatch: out_count++; ent = c;"];
    N22 [label="22: if (free_ent < maxmaxcode)"];
    N23 [label="23: codetabof(i) = free_ent++; htabof(i) = fcode;"];
    N24 [label="24: else if (in_count >= checkpoint && block_compress)"];
    N25 [label="25: cl_block();"];
    N26 [label="26: if (bytes_out > in_count) exit_stat = 2;"];
    N27 [label="27: return;"];

    N1 -> N2 -> N3 -> N4 -> N5 -> N6;
    N6 -> N7 [label="true"];
    N6 -> N26 [label="false"];
    N7 -> N8 -> N9;
    N9 -> N10 [label="true"];
    N9 -> N11 [label="false"];
    N11 -> N12 [label="true"];
    N11 -> N13 [label="false"];
    N12 -> N21;
    N13 -> N14 -> N15;
    N15 -> N16 -> N17;
    N17 -> N18 [label="true"];
    N17 -> N19 [label="false"];
    N19 -> N20 [label="true"];
    N19 -> N21 [label="false"];
    N20 -> N15;
    N21 -> N22;
    N22 -> N23 [label="true"];
    N22 -> N24 [label="false"];
    N24 -> N25 [label="true"];
    N24 -> N6 [label="false"];
    N25 -> N6;
    N26 -> N27;
}