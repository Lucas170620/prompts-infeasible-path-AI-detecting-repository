digraph sort_CFG {
    node [shape=box, style=rounded, fontname="Courier"];

    // Nos representando blocos de codigo
    N1 [label="1: i, ir=n, j, k, l=1, jstack=0, flag=0"];
    N2 [label="2: for (;;)"];
    N3 [label="3: if (ir-l < M)"];
    N4 [label="4: for (j=l+1; j<=ir; j++)\l    a=arr[j];\l    for (i=j-1; i>=l; i--)\l        if (arr[i] <= a) break;\l        arr[i+1]=arr[i];\l    arr[i+1]=a;"];
    N5 [label="5: if (jstack == 0)"];
    N6 [label="6: break;"];
    N7 [label="7: ir=istack[jstack--];\l    l=istack[jstack--];"];
    N8 [label="8: else\l    k=(l+ir)>>1;\l    SWAP(arr[k],arr[l+1]);\l    if (arr[l] > arr[ir]) SWAP(arr[l],arr[ir]);\l    if (arr[l+1] > arr[ir]) SWAP(arr[l+1],arr[ir]);\l    if (arr[l] > arr[l+1]) SWAP(arr[l],arr[l+1]);\l    i=l+1; j=ir; a=arr[l+1];"];
    N9 [label="9: for (;;)"];
    N10 [label="10: i++; while (arr[i] < a) i++;"];
    N11 [label="11: j--; while (arr[j] > a) j--;"];
    N12 [label="12: if (j < i) break;"];
    N13 [label="13: SWAP(arr[i],arr[j]);"];
    N14 [label="14: arr[l+1]=arr[j];\l     arr[j]=a;\l     jstack += 2;"];
    N15 [label="15: if (ir-i+1 >= j-l)"];
    N16 [label="16: istack[jstack]=ir;\l     istack[jstack-1]=i;\l     ir=j-1;"];
    N17 [label="17: else\l     istack[jstack]=j-1;\l     istack[jstack-1]=l;\l     l=i;"];
    N18 [label="18: End of function", shape=doublecircle];

    // Arestas do CFG
    N1 -> N2;
    N2 -> N3;
    N3 -> N4 [label="true"];
    N3 -> N8 [label="false"];
    N4 -> N5;
    N5 -> N6 [label="true"];
    N5 -> N7 [label="false"];
    N6 -> N18;
    N7 -> N2;
    N8 -> N9;
    N9 -> N10;
    N10 -> N11;
    N11 -> N12;
    N12 -> N13 [label="false"];
    N12 -> N14 [label="true"];
    N13 -> N9;
    N14 -> N15;
    N15 -> N16 [label="true"];
    N15 -> N17 [label="false"];
    N16 -> N2;
    N17 -> N2;
}