digraph DFG_fib {
    node [shape=ellipse, style=filled, fillcolor=lightblue];
    n_input [label="n"];
    const_1 [label="1"];
    const_0 [label="0"];
    const_2 [label="2"];

    node [shape=box, style="", fillcolor=""];
    op_init_fnew [label="Fnew = 1"];
    op_init_fold [label="Fold = 0"];
    op_init_i [label="i = 2"];
    op_temp [label="temp = Fnew"];
    op_update_fnew [label="Fnew = Fnew + Fold"];
    op_update_fold [label="Fold = temp"];
    op_inc_i [label="i++"];
    op_ans [label="ans = Fnew"];
    op_return [label="return ans"];

    node [shape=ellipse, style=filled, fillcolor=lightgreen];
    Fnew_out [label="Fnew"];
    Fold_out [label="Fold"];
    i_out [label="i"];
    ans_out [label="ans"];

    const_1 -> op_init_fnew;
    const_0 -> op_init_fold;
    const_2 -> op_init_i;
    op_init_fnew -> Fnew_out;
    op_init_fold -> Fold_out;
    op_init_i -> i_out;
    Fnew_out -> op_temp;
    op_temp -> op_update_fold;
    Fnew_out -> op_update_fnew;
    Fold_out -> op_update_fnew;
    op_update_fnew -> Fnew_out;
    op_update_fold -> Fold_out;
    i_out -> op_inc_i;
    op_inc_i -> i_out;
    Fnew_out -> op_ans;
    op_ans -> ans_out;
    ans_out -> op_return;
    n_input -> op_init_i [style=invis]; // n is used only in condition, not in data operations
}